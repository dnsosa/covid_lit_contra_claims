[tox]
envlist =
    coverage-clean
    manifest
    pyroma
    flake8
    doc8
    readme
    docs
    py
    coverage-report

[testenv]
commands = coverage run -p -m pytest --durations=20 {posargs:tests}

deps =
    coverage
    datasets
    evaluate
    fse
    gensim
    keras
    matplotlib
    networkx
    nltk
    numpy
    openpyxl
    pandas
    pyarrow
    pytest
    scikit-learn
    seaborn
    spacy
    torch
    transformers
    wandb

# install_command = pip install https://github.com/explosion/spacy-models/releases/download/en_core_web_sm-2.1.0/en_core_web_sm-2.1.0.tar.gz {packages}
# install_command = pip install https://s3-us-west-2.amazonaws.com/ai2-s2-scispacy/releases/v0.2.5/en_core_sci_sm-0.2.5.tar.gz {packages}

whitelist_externals =
    /bin/cat
    /bin/cp
    /bin/mkdir
    /usr/bin/git

[testenv:coverage-clean]
commands = coverage erase
deps = coverage
skip_install = true

[testenv:manifest]
commands = check-manifest
deps = check-manifest
skip_install = true

[testenv:pyroma]
commands = pyroma --min=10 .
deps =
    pygments
    pyroma
skip_install = true
description = Check how package-friendly the project is using Pyroma

[testenv:flake8]
commands =
    flake8 src/covid_lit_contra_claims tests setup.py
deps =
    flake8
    flake8-bandit
    flake8-builtins
    flake8-bugbear
    flake8-colors
    flake8-commas
    flake8-comprehensions
    flake8-docstrings
    flake8-import-order
    flake8-print
    flake8-use-fstring
    pep8-naming
    pydocstyle
skip_install = true
description = Run flake8 with several plugins (bandit, docstrings, import order, pep8, naming) to check code quality

[flake8]
ignore = S106, S403, S301
# Ignoring .format used (FS002), hardcoded passwords (S106), pickle security (S403,S301)

[testenv:doc8]
commands = doc8 docs/source/ README.rst
deps =
    sphinx
    doc8
skip_install = true
description = Run the doc8 tool to check the style of the RST files in the project docs.

[testenv:readme]
commands = rst-lint README.rst
deps =
    restructuredtext_lint
    pygments
skip_install = true
description = Run the rst-lint tool to check the style of the README.

[testenv:docs]
changedir = docs
extras =
    docs
    jupyter
    grounding
commands =
    mkdir -p {envtmpdir}
    cp -r source {envtmpdir}/source
    sphinx-build -W -b html -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/html
    sphinx-build -W -b coverage -d {envtmpdir}/build/doctrees {envtmpdir}/source {envtmpdir}/build/coverage
    cat {envtmpdir}/build/coverage/c.txt
    cat {envtmpdir}/build/coverage/python.txt

[testenv:coverage-report]
commands =
    coverage combine
    coverage report
deps = coverage
skip_install = true


####################
# Deployment tools #
####################
# TODO: Not sure what the configs below do yet. Unsure how to use bumpversion and how to deploy to PyPI

[testenv:bumpversion]
commands = bumpversion {posargs}
deps = bumpversion
passenv = HOME
skip_install = true

[testenv:build]
commands = python setup.py -q sdist bdist_wheel
deps =
    wheel
    setuptools
skip_install = true

[testenv:release]
commands =
    {[testenv:build]commands}
    twine upload --skip-existing dist/*
deps =
    {[testenv:build]deps}
    twine >= 1.5.0
skip_install = true

[testenv:finish]
deps =
    {[testenv:build]deps}
    {[testenv:release]deps}
    bumpversion
commands =
    bumpversion release
    {[testenv:release]commands}
    git push
    bumpversion patch
    git push
skip_install = true
